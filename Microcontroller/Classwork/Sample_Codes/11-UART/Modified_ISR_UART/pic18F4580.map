Microchip MPLAB XC8 Compiler V2.20

Linker command line:

--edf=/opt/microchip/xc8/v2.20/pic/dat/en_msgs.txt -cn -h+pic18F4580.sym \
  --cmf=pic18F4580.cmf -z -Q18F4580 -o/tmp/xcXefAANO -Mpic18F4580.map \
  -ver=XC8 Compiler -ASTACK=060h-05FFh -pstack=STACK -ACODE=00h-03000h \
  -ACONST=00h-03000h -ASMALLCONST=0600h-06FFhx42,03000h-03000h \
  -AMEDIUMCONST=0600h-03000h -ACOMRAM=01h-05Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh -ACONFIG=0300000h-030000Dh \
  -AIDLOC=0200000h-0200007h \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -AEEDATA=0F00000h-0F000FFh -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  startup.obj pic18F4580.obj 

Object code version is 3.11

Machine type is 18F4580



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
pic18F4580.obj  intcode                               8        8        6        4       0
                temp                                  4        4        1        1       1
                smallconst                          600      600       8C      300       0
                intcode_body                        73A      73A       14      346       0
                text5                               75A      75A        8      346       0
                text4                               68C      68C       3E      346       0
                text3                               74E      74E        C      346       0
                text2                               6F0      6F0       20      346       0
                text1                               710      710       16      346       0
                text0                               6CA      6CA       26      346       0
                cstackCOMRAM                          1        1        2        1       1
                bssCOMRAM                             3        3        1        1       1
                cinit                               726      726       14      346       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                        73A      73A       14         0
                text5                               75A      75A        8         0
                text4                               68C      68C       3E         0
                text3                               74E      74E        C         0
                text2                               6F0      6F0       20         0
                text1                               710      710       16         0
                text0                               6CA      6CA       26         0
                cinit                               726      726       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       8C         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                  4        4        1         1
                cstackCOMRAM                          1        1        2         1
                bssCOMRAM                             3        3        1         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   FARRAM         

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000004  000005         1       1  COMRAM  
                text4                          00068C  0000D6  000762       346       0  CODE    
                intcode                        000008  00000A  000012         4       0  CODE    
                smallconst                     000600  00008C  00068C       300       0  SMALLCON


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0060-00FF             A0
        BANK1            0100-01FF            100
        BANK2            0200-02FF            100
        BANK3            0300-03FF            100
        BANK4            0400-04FF            100
        BANK5            0500-05FF            100
        BIGRAM           0005-05FF            5FB
        CODE             0004-0007              4
                         0012-05FF            5EE
                         0762-3000           289F
        COMRAM           0005-005F             5B
        CONFIG           300000-30000D              E
        CONST            0004-0007              4
                         0012-05FF            5EE
                         0762-3000           289F
        EEDATA           F00000-F000FF            100
        IDLOC            200000-200007              8
        MEDIUMCONST      0762-3000           289F
        RAM              0060-05FF            100
        SFR              0D00-0FFF            100
        SMALLCONST       0762-3000            100
        STACK            0060-05FF            5A0

                                  Symbol Table

_ABDEN                   (abs)        7DC0
_ABDOVF                  (abs)        7DC7
_ADDEN                   (abs)        7D5B
_BRG16                   (abs)        7DC3
_BRGH                    (abs)        7D62
_CREN                    (abs)        7D5C
_CSRC                    (abs)        7D67
_FERR                    (abs)        7D5A
_GIE                     (abs)        7F97
_OERR                    (abs)        7D59
_PEIE                    (abs)        7F96
_RCIDL                   (abs)        7DC6
_RCIE                    (abs)        7CED
_RCIF                    (abs)        7CF5
_RCREG                   (abs)        0FAE
_RX9                     (abs)        7D5E
_RX9D                    (abs)        7D58
_SCKP                    (abs)        7DC4
_SENDB                   (abs)        7D63
_SPBRG                   (abs)        0FAF
_SPEN                    (abs)        7D5F
_SREN                    (abs)        7D5D
_SYNC                    (abs)        7D64
_TRISC6                  (abs)        7CA6
_TRISC7                  (abs)        7CA7
_TRMT                    (abs)        7D61
_TX9                     (abs)        7D66
_TX9D                    (abs)        7D60
_TXEN                    (abs)        7D65
_TXIE                    (abs)        7CEC
_TXIF                    (abs)        7CF4
_TXREG                   (abs)        0FAD
_WUE                     (abs)        7DC1
__HRAM                   (abs)        0000
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__Hbank4                 bank4        0000
__Hbank5                 bank5        0000
__Hbigbss                bigbss       0000
__Hbigdata               bigdata      0000
__Hbigram                bigram       0000
__Hbss                   bss          0000
__HbssCOMRAM             bssCOMRAM    0000
__Hcinit                 cinit        0000
__Hclrtext               clrtext      0000
__Hcomram                comram       0000
__Hconfig                config       0000
__Hconst                 const        0000
__HcstackCOMRAM          cstackCOMRAM 0000
__Hdata                  data         0000
__Heeprom_data           eeprom_data  0000
__Hfarbss                farbss       0000
__Hfardata               fardata      0000
__Hibigdata              ibigdata     0000
__Hidata                 idata        0000
__Hidloc                 idloc        0000
__Hifardata              ifardata     0000
__Hinit                  init         0012
__Hintcode               intcode      000E
__Hintcode_body          intcode_body 0000
__Hintcodelo             intcodelo    000E
__Hintentry              intentry     0000
__Hintret                intret       0000
__Hintsave_regs          intsave_regs 0000
__Hirdata                irdata       0000
__Hmediumconst           mediumconst  0000
__HnvFARRAM              nvFARRAM     0000
__Hnvbit                 nvbit        0000
__Hnvrram                nvrram       0000
__Hparam                 rparam       0000
__Hpowerup               powerup      000E
__Hram                   ram          0000
__Hramtop                ramtop       0600
__Hrbit                  rbit         0000
__Hrbss                  rbss         0000
__Hrdata                 rdata        0000
__Hreset_vec             reset_vec    0004
__Hrparam                rparam       0000
__Hsfr                   sfr          0000
__Hsmallconst            smallconst   068C
__Hspace_0               (abs)        0762
__Hspace_1               (abs)        0005
__Hspace_2               (abs)        0000
__Hspace_4               (abs)        0000
__Hstack                 stack        0000
__Hstruct                struct       0000
__Htemp                  temp         0005
__Htext                  text         0000
__Htext0                 text0        0000
__Htext1                 text1        0000
__Htext2                 text2        0000
__Htext3                 text3        0000
__Htext4                 text4        0000
__Htext5                 text5        0000
__LRAM                   (abs)        0001
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__Lbank4                 bank4        0000
__Lbank5                 bank5        0000
__Lbigbss                bigbss       0000
__Lbigdata               bigdata      0000
__Lbigram                bigram       0000
__Lbss                   bss          0000
__LbssCOMRAM             bssCOMRAM    0000
__Lcinit                 cinit        0000
__Lclrtext               clrtext      0000
__Lcomram                comram       0000
__Lconfig                config       0000
__Lconst                 const        0000
__LcstackCOMRAM          cstackCOMRAM 0000
__Ldata                  data         0000
__Leeprom_data           eeprom_data  0000
__Lfarbss                farbss       0000
__Lfardata               fardata      0000
__Libigdata              ibigdata     0000
__Lidata                 idata        0000
__Lidloc                 idloc        0000
__Lifardata              ifardata     0000
__Linit                  init         000E
__Lintcode               intcode      0008
__Lintcode_body          intcode_body 0000
__Lintcodelo             intcodelo    000E
__Lintentry              intentry     0000
__Lintret                intret       0000
__Lintsave_regs          intsave_regs 0000
__Lirdata                irdata       0000
__Lmediumconst           mediumconst  0000
__LnvFARRAM              nvFARRAM     0000
__Lnvbit                 nvbit        0000
__Lnvrram                nvrram       0000
__Lparam                 rparam       0000
__Lpowerup               powerup      000E
__Lram                   ram          0000
__Lramtop                ramtop       0600
__Lrbit                  rbit         0000
__Lrbss                  rbss         0000
__Lrdata                 rdata        0000
__Lreset_vec             reset_vec    0000
__Lrparam                rparam       0000
__Lsfr                   sfr          0000
__Lsmallconst            smallconst   0600
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstruct                struct       0000
__Ltemp                  temp         0004
__Ltext                  text         0000
__Ltext0                 text0        0000
__Ltext1                 text1        0000
__Ltext2                 text2        0000
__Ltext3                 text3        0000
__Ltext4                 text4        0000
__Ltext5                 text5        0000
__S0                     (abs)        0762
__S1                     (abs)        0005
__S2                     (abs)        0000
__S4                     (abs)        0000
__S5                     (abs)        0000
___inthi_sp              stack        0000
___intlo_sp              stack        0000
___param_bank            (abs)        0000
___rparam_used           (abs)        0001
___sp                    stack        0000
__accesstop              (abs)        0060
__activetblptr           (abs)        0001
__end_of__initialization cinit        0728
__end_of_getch           text5        0762
__end_of_init_config     text1        0726
__end_of_init_uart       text4        06CA
__end_of_isr             intcode_body 074E
__end_of_main            text0        06F0
__end_of_putch           text3        075A
__end_of_puts            text2        0710
__initialization         cinit        0726
__mediumconst            mediumconst  0000
__pbssCOMRAM             bssCOMRAM    0003
__pcinit                 cinit        0726
__pcstackCOMRAM          cstackCOMRAM 0001
__pintcode               intcode      0008
__pintcode_body          intcode_body 073A
__psmallconst            smallconst   0600
__ptext0                 text0        06CA
__ptext1                 text1        0710
__ptext2                 text2        06F0
__ptext3                 text3        074E
__ptext4                 text4        068C
__ptext5                 text5        075A
__ramtop                 ramtop       0600
__size_of_getch          (abs)        0000
__size_of_init_config    (abs)        0000
__size_of_init_uart      (abs)        0000
__size_of_isr            (abs)        0000
__size_of_main           (abs)        0000
__size_of_putch          (abs)        0000
__size_of_puts           (abs)        0000
__smallconst             smallconst   0600
_ch                      bssCOMRAM    0003
_getch                   text5        075A
_init_config             text1        0710
_init_uart               text4        068C
_isr                     intcode      0008
_main                    text0        06CA
_putch                   text3        074E
_puts                    text2        06F0
btemp                    temp         0004
end_of_initialization    cinit        0728
int$flags                temp         0004
int_func                 intcode_body 073A
intlevel0                text         0000
intlevel1                text         0000
intlevel2                text         0000
intlevel3                text         0000
putch@byte               cstackCOMRAM 0001
puts@s                   cstackCOMRAM 0002
stackhi                  (abs)        05FF
stacklo                  (abs)        0060
start                    init         000E
start_initialization     cinit        0726
ttemp5                   temp         0005
ttemp6                   temp         0008
ttemp7                   temp         000C
wtemp8                   temp         0005


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 20 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_init_config
		_putch
		_puts
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _init_config *****************
 Defined at:
		line 7 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_getch
		_init_uart
		_puts
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _puts *****************
 Defined at:
		line 90 in file "uart.c"
 Parameters:    Size  Location     Type
  s               1    1[COMRAM] PTR const unsigned char 
		 -> STR_3(41), STR_2(35), STR_1(62), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    1[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_putch
 This function is called by:
		_init_config
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 79 in file "uart.c"
 Parameters:    Size  Location     Type
  byte            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  byte            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_puts
		_main
 This function uses a non-reentrant model


 *************** function _init_uart *****************
 Defined at:
		line 4 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_init_config
 This function uses a non-reentrant model


 *************** function _getch *****************
 Defined at:
		line 100 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_init_config
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 5 in file "isr.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
uart.c
		_putch         		CODE           	074E	0000	13
		_init_uart     		CODE           	068C	0000	63
		_puts          		CODE           	06F0	0000	33
		_getch         		CODE           	075A	0000	9

uart.c estimated size: 118

isr.c
		_isr           		CODE           	0008	0000	27

isr.c estimated size: 27

shared
		__initialization		CODE           	0726	0000	3

shared estimated size: 3

main.c
		_main          		CODE           	06CA	0000	39
		_init_config   		CODE           	0710	0000	23

main.c estimated size: 62

